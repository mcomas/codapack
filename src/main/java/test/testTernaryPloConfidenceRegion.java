/**	
 *	Copyright 2011-2016 Marc Comas - Santiago Thi√≥
 *
 *	This file is part of CoDaPack.
 *
 *  CoDaPack is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  CoDaPack is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with CoDaPack.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package test;

import coda.CoDaStats;
import coda.ext.jama.Matrix;
import coda.plot2.window.TernaryPlot2dWindow;
import coda.plot2.PlotUtils;
import coda.plot2.objects.Ternary2dObject;
import coda.plot2.objects.Ternary2dCurveObject;
import coda.plot2.objects.Ternary2dDataObject;
import coda.plot2.objects.Ternary2dGridObject;
import coda.plot2.TernaryPlot2dDisplay;
import java.awt.Color;


/**
 *
 * @author mcomas
 */
public class testTernaryPloConfidenceRegion {
    public static void main(String args[]) {
        String names[] = {"X", "Y", "Z"};
        
        
        TernaryPlot2dDisplay display = new TernaryPlot2dDisplay(names);

        Ternary2dObject gridObject = new Ternary2dGridObject(display, definedGrid);
        display.addCoDaObject(gridObject);

        Ternary2dObject dataObject = new Ternary2dDataObject(display, data);
        dataObject.setColor(new Color(70, 70, 200));
        display.addCoDaObject(dataObject);
        
        double transData[][] = new Matrix(data).transpose().getArray();

        Ternary2dObject curveObject2 = new Ternary2dCurveObject(display,
                    PlotUtils.confidenceRegion2d(transData, 0.95));
            curveObject2.setColor(Color.red);//new Color(70, 100, 70));
            display.addCoDaObject(curveObject2);

        Ternary2dObject curveObject3 = new Ternary2dCurveObject(display,
                PlotUtils.confidenceRegion2d(transData, 0.90));
            curveObject3.setColor(Color.DARK_GRAY);//new Color(70, 100, 70));
            display.addCoDaObject(curveObject3);

        Ternary2dObject curveObject4 = new Ternary2dCurveObject(display,
                PlotUtils.confidenceRegion2d(transData, 0.99));
            curveObject4.setColor(Color.DARK_GRAY);//new Color(70, 100, 70));
            display.addCoDaObject(curveObject4);
        
        
        TernaryPlot2dWindow frame = new TernaryPlot2dWindow(null, display, "Test", "Test", "Test");
        frame.setCenter(CoDaStats.center(new Matrix(data).transpose().getArray()));
        frame.getContentPane().add(display);
        frame.setVisible(true);
    }
    
    static double definedGrid[] =
        {0.01, 0.05, 0.10, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99};
        //{0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9};

    
    static double data[][]
             =
/*    {{52,42,6},
{	52,44,4},
{	47,48,5},
{	45,49,6},
{	40,50,10},
{	37,54,9},
{	27,58,15},
{	27,54,19},
{	23,59,18},
{	22,59,19},
{	21,60,19},
{	25,53,22},
{	24,54,22},
{	22,55,23},
{	22,56,22},
{	20,58,22},
{	16,62,22},
{	17,57,26},
{	14,54,32},
{	13,55,32},
{	13,52,35},
{	14,47,39},
{	24,56,20}};*/

    {{6.7,23.6,2.6},
{3.3,23.6,2.2},
{5.8,25.2,2.3},
{6.3,24.4,2.4},
{2.1,23.2,2.5},
{2.4,21.2,2.6},
{2.4,23.6,2.5},
{1.9,19.5,2.7},
{9.3,16.2,2.4},
{9.4,19.6,1.1},
{6.2,21.8,1.4},
{4.7,22.2,1.1},
{3.1,23,0.9},
{3.4,23.2,1.1},
{3.6,23.2,1.1},
{0.7,26.2,2.8},
{0.8,26.5,3},
{0.8,26.1,2.8},
{0.8,23.9,3},
{0.8,22.3,3},
{0.8,22.9,3.1},
{0.6,22.9,3},
{1.3,24.9,2.8},
{0.9,25.5,2.8},
{0.8,25.9,2.6},
{0.8,26.9,2.7},
{1.1,26.9,2.7},
{5.1,24.4,2.6},
{5.5,24,2.4},
{2.8,27.5,2.7},
{2.6,23.6,2.6},
{6.1,29.1,2.6},
{4,24.3,2.7},
{0.8,25.9,2.8},
{1.5,24.3,2.8},
{4.7,23.1,2.2},
{5.5,23.5,2.4},
{4.2,21.9,2.5},
{3.9,22.7,2.7},
{3.3,22.7,2.6},
{3.7,21.5,2.1},
{2.7,20.3,2.2},
{1.3,21.1,2.6},
{1.2,24.7,2.7},
{1.6,22.7,2.8},
{3.3,21.6,2.6},
{2.3,20.9,2.4},
{5,22.9,2.8},
{2.1,22.1,2.9},
{5.5,14,3},
{8.9,21.9,2.2},
{12.4,21.1,2.1},
{2.6,24.7,2.5},
{7.4,20.7,2.2},
{3,24.7,2.6},
{3.4,23.9,2.6},
{5.1,22.7,2.6},
{2.8,24,2.6},
{6.9,23.3,2.7},
{4.6,23.5,2.7},
{5.6,24.2,2.6},
{5.7,21.3,2.5},
{6.3,18.4,2.9},
{1.9,26.7,3},
{1.3,25,2.8},
{2.1,24.6,2.8},
{2.4,24.2,2.7},
{2.6,25,2.8},
{2.8,24.2,2.6},
{4,21.4,2.4},
{6.2,21.4,2.6},
{5.2,19.4,2.4},
{4.6,32.1,2.3},
{8.8,25.8,2.2},
{8.9,25.4,2.5},
{2.2,29.5,2.5},
{2.3,30.3,2.5},
{2.6,29.1,2.5},
{4,26.7,2.3},
{5,27.1,2.4},
{1.1,27.9,3},
{7,26.6,2.3},
{3.3,29.9,2.3},
{8,25.4,2.3},
{0.2,24,3.3},
{0.7,24.2,3.2},
{0.4,23.4,3.2},
{0.3,26,3},
{0.4,24.8,3.1},
{0.5,24.6,3.2},
{0.4,22.6,3.3},
{0.4,24.9,3.3},
{0.4,23.4,3},
{0.6,26.9,3.3},
{0.5,25.7,3.2},
{2.6,24.2,3.1},
{6,24.2,2.7},
{5.8,19.9,2.5},
{4.3,24.6,3.1},
{3.1,24.2,3.1},
{5,22.2,3},
{5.4,21.8,3},
{7.3,20.3,3},
{7,17.2,3},
{0.8,23,3},
{0.5,26.6,3.3},
{4.9,22.1,3.2},
{6,24.6,2.8},
{4.6,24.6,2.6},
{3.2,25,2.9},
{8.8,24.6,2.4},
{6.7,22.2,2.4},
{7.5,23.4,2.5},
{8.9,20.7,2.6},
{5,21.5,2.6},
{4.4,23.4,2.2},
{5.4,23.4,2.1},
{8.8,21.4,2.3},
{2.8,21.1,2.9},
{1.8,22.6,2.9},
{5.1,21.5,2.5},
{0.9,26.5,3.1},
{0.8,30,3.2},
{0.8,31.6,3},
{0.8,28.5,2.8},
{0.6,25.7,2.8},
{1.3,19.1,3.1},
{4.9,21.1,2.8},
{1.3,24.6,3},
{1.2,24.6,3.2},
{0.7,23.8,3.1},
{1.5,24.6,3.3},
{1.2,24.9,3.1},
{2.1,25.7,3.1},
{3.1,25.7,3.1},
{4.8,22.6,2.9},
{3,23.4,2.9},
{2.4,23.8,3},
{3,23.8,2.9},
{2,25.3,3.1},
{1,25.3,3},
{1,26.1,3.1},
{1.6,24.2,3},
{1.2,24.2,3.2},
{0.9,26.1,3.1},
{1,26.5,2.4},
{2.2,25.3,3.1},
{0.8,21.8,3.1},
{0.6,24.6,2.9},
{0.7,22.6,2.9},
{0.7,24.2,2.9},
{1.1,23.4,2.9},
{1.6,24.2,2.8},
{2.4,24.6,2.8},
{4.6,24.6,2.7},
{3.8,24.2,2.7},
{7.1,23.4,2.5},
{6.4,23.4,2.7},
{3.2,24.9,2.6},
{2.4,19.9,2.9},
{1.6,21.8,3},
{2.5,23.4,2.8},
{9.5,23.2,2.3},
{7.4,26.4,2.4},
{3.9,24.4,2.8},
{2.8,25.2,2.8},
{3.2,24,3.1},
{2.1,20,3},
{1.8,19.2,3.3},
{3.5,20,3},
{4.7,19.2,3},
{5.3,22,2.6},
{4.1,22.8,2.8},
{4.5,21.6,2.8},
{6.8,21.2,2.7},
{1.5,22,3},
{1.9,22.4,2.9},
{1.7,22.4,3},
{1.7,24,2.9},
{1.9,24,2.9},
{1.6,25.6,3.4},
{0.8,26.8,3},
{0.6,30,3.1},
{0.4,31.2,3.2},
{1.6,28,3.2},
{0.8,25.2,3},
{1.4,26.4,2.6},
{1.4,28.4,2.6},
{5.2,25.2,2.7},
{3.9,24.8,2.9},
{0.9,24.4,3.1},
{2,26,3.1},
{2.4,24.8,3.2},
{3,24.8,3.2},
{3,23.6,3.1},
{3.2,22.8,3},
{2.2,25.2,3.2},
{4.3,25.2,3.1},
{6.5,22,3.1},
{2.5,23.2,3.2},
{2.2,24.4,3.2},
{1.2,24,3.3},
{1.6,22.8,3.1},
{2.5,23.2,3.1},
{0.9,24,3.4},
{0.6,24,3.2},
{3.1,25.2,3.4},
{2.8,26,3.3},
{3.2,26.4,3.5},
{2.6,25.2,3.4},
{3.8,24.4,3.3},
{3.7,26.8,3.2},
{3.4,25.6,3.2},
{3.5,25.2,3.2},
{6.6,24,3},
{5.9,22,2.9},
{14.5,19.6,2},
{9,20.8,1.9},
{6.2,22,1.8},
{9.2,19.2,1.9},
{3,24.8,3},
{3.7,22.4,2.7},
{1.2,21.6,1.6},
{3,21.6,2.3},
{1.6,21.2,2},
{2.6,21.2,2},
{5.3,22,2.1},
{4.8,22.8,2.2},
{4.5,22,2.2},
{5.2,19.6,1.9},
{5.4,21.6,2.3},
{5,20,2.1},
{3.5,22.8,2.9},
{7.4,25.2,2.4},
{6,24.8,2.8},
{5,25.6,3},
{5.7,22,2.6},
{0.9,22.8,3.4},
{0.5,26,3.8},
{0.7,26,3.9},
{0.5,23.6,3.8},
{0.8,24,3.7},
{0.8,24.4,3.7},
{3.9,24.8,2.8},
{0.5,28.4,3.9},
{0.3,28.4,3.7},
{0.5,26.8,3.5},
{1,26,3.2},
{0.7,26.4,3},
{2.2,30,2.8},
{6.8,28.4,2.4},
{1.5,25.2,2.7},
{5.6,24.8,2.9},
{5.8,24.4,2.9},
{6.3,26,2.7},
{7.1,23.6,2.9},
{0.7,25.6,3},
{0.5,26.8,3.1},
{0.9,27.2,3.2},
{2.1,23.6,2.9},
{0.6,26.8,3.1},
{0.9,26,3.1},
{2.2,26.4,2.8},
{1.3,25.2,3.1},
{1.7,28.4,2.8},
{2.5,22.8,2.6},
{6.3,26.4,2.6},
{6.4,24,3},
{2.8,24,3.3},
{2.7,24,3.3},
{2,24,3.2},
{0.9,24.8,2.9},
{4.8,22.4,3},
{3.1,22,3.2},
{3.6,22.4,3.1},
{2.3,23.2,3},
{0.8,26,3.3},
{0.9,27.6,3.3},
{1.4,27.2,3.3},
{0.7,24.8,3.1},
{0.6,24,3.2},
{0.7,22.8,3.2},
{0.5,24.4,3.3},
{0.5,21.6,3.3},
{0.9,26.4,3.4},
{0.7,26,3.2},
{0.8,20.8,3.5},
{2.4,21.6,3},
{3,20,3.1},
{2.2,20.8,3.1},
{2.9,22,3},
{4,24.8,2.8},
{4.4,23.6,2.9},
{4.1,24.8,3},
{2.6,23.6,3.1},
{2.5,23.2,3.1},
{4.7,27.2,2.6},
{4.8,28.4,3},
{4,28.8,3.1},
{4.4,26.4,3},
{2.8,25.6,2.9},
{3.7,24.4,2.7},
{3.4,23.6,2.8},
{3,23.6,3},
{1.9,22.8,3.2},
{2.5,21.6,3.1},
{4.5,22.8,3},
{6.2,22.4,3},
{4.7,20.8,2.5},
{4.5,20.8,2.5},
{2.8,26.8,2.9},
{6.9,25.6,2.6},
{6.8,24.8,2.5},
{4.1,21.2,2.8},
{6.4,20,2.8},
{7,22,2.6},
{0.8,24,2.6},
{7.6,22,2.1},
{7.7,22.4,2.1},
{9,21.2,1.9},
{8.9,21.2,1.9},
{6.3,20.8,3.1},
{3.7,23.6,3.3},
{2.2,24.8,3.3},
{1.7,23.6,3.3},
{1.2,24.4,3.3},
{1.3,26,3.2},
{7.1,21.6,2.8},
{4.3,22,3},
{2.6,23.6,3},
{2.2,27.2,3.3},
{2.2,26.4,3.1}};/*

            = {
            {31.7,3.8,6.4},
            {23.8,9,9.2},
            {9.1,34.2,9.5},
            {23.8,7.2,10.1},
            {38.3,2.9,7.7},
            {26.2,4.2,12.5},
            {33,4.6,12.2},
            {5.2,42.9,9.6},
            {11.7,26.7,9.6},
            {46.6,0.7,5.6},
            {19.5,11.4,9.5},
            {37.3,2.7,5.5},
            {8.5,38.9,8},
            {12.9,23.4,15.8},
            {17.5,15.8,8.3},
            {7.3,40.9,12.9},
            {44.3,1,7.8},
            {32.3,3.1,8.7},
            {15.8,20.4,8.3},
            {11.5,23.8,11.6},
            {16.6,16.8,12},
            {25,6.8,10.9},
            {34,2.5,9.4},
            {16.6,17.6,9.6},
            {24.9,9.7,9.8}};*/
}